# Site
repository: Git repository where your resume will be hosted, only required if you are hosting on GitHub (eg. sproogen/modern-resume-theme)
# favicon: Directory of your favicon (eg. images/favicon.ico)(optional)

# Content configuration version
version: 2

# Personal info
name: 이상혁
title: 왜? 라는 질문을 던지는 백엔드 개발자
email: dktmskf96@gmail.com
# email_title: Email (Email title override)
phone: 010-4482-5308
# phone_title: Phone (Phone title override)
website: https://velog.io/@sang_hyeok_2
# website_title: Web (Website title override)

# Dark Mode (true/false/never)
darkmode: false

# Social links
# twitter_username: jekyllrb
github_username:  jekyll
# stackoverflow_username: "00000001"
# dribbble_username: jekyll
# facebook_username: jekyll
# flickr_username: jekyll
# instagram_username: jekyll
# linkedin_username: jekyll
# xing_username: jekyll
# pinterest_username: jekyll
# youtube_username: jekyll
# orcid_username: 0000-0000-0000-0000
# googlescholar_username: D847cGsAAAAJ

# Additional icon links
# additional_links:
# - title: Link name
#   icon: Font Awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&s=brands&m=free)
#   url: Link url (eg. https://google.com)
# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&s=brands&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
# about_title: About Me (Use this to override about section title)
about_profile_image: images/resume.jpeg
about_content: | # this will include new lines to allow paragraphs
    Java & Spring 기반의 백엔드 개발자가 되기 위해서 **00개의 블로그 포스팅**을 작성을 하며 지식을 꾸준하고 체계적으로 정리를 했습니다. 또한 **AWS와 Docker를 활용한 인프라 구축**을 통해 실무 환경에 대한 경험을 쌓았습니다.

    애플리케이션의 안전성과 유지보수를 위해서 테스트 코드를 중요하게 생각하고 있습니다. 그래서 개발을 할 때 **테스트 코드가 자동으로 실행**되도록 하였습니다.

    저는 항상 **`'왜?'라는 질문을 던지는 개발자`**가 되려고 합니다. 개발자는 사람들이 인지하지 못했던 불편함을 발견하고, 이를 서비스로 해결함으로써 **더 나은 세상을 만드는 직업**이라고 생각합니다. 그리고 그 시작은 바로 **`'왜?'`**라는 질문에서부터 시작된다고 믿습니다.
   
    코드를 작성할 때도 여러 가지 방법이 있을 수 있는데, 그중 특정 방법을 **`'왜?'`** 선택했는지, 다른 더 나은 방법은 없는지 고민하며 성장이 이루어진다고 생각합니다. **`'왜?'`라는 질문은 서비스 개발뿐만 아니라, 코드 작성에서도 개발자에게 꼭 필요한 과정**이라고 생각합니다.


  


  # You can even add paragraphs by using empty lines like this and add anything else [markdown](https://www.markdownguide.org/getting-started#what-is-markdown) supports such as
  #   - Lists
  #   - Tables
  #   - <a href="google.com">Links</a>
  #   - Images ![alt text](/images/landscape-trees.jpg "Trees")

content:
  - title: Projects # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        border: weak  # Value of `weak` will display a weak border below this item. # Any 
                      # other value (or no value) means no border will be displayed
        title: Ticket-flow
        link: https://github.com/f-lab-edu/ticket-flow
        link_text: https://github.com/f-lab-edu/ticket-flow
        additional_links:
          - title:  ticket-flow
            icon: fab fa-github
            url: https://github.com/f-lab-edu/ticket-flow
        #   - title:  Github page for project (eg. sproogen/modern-resume-theme)
        #     icon: fab fa-github
        #     url: Link to project (eg. sproogen.github.io/modern-resume-theme)(optional)
        quote: >
          문화생활을 즐길 수 있는 스포츠, 연극, 뮤지컬 등 관람 티켓을 예매할 수 있는 프로젝트
        description: | # this will include new lines to allow paragraphs
          - 인기 검색어 동시성 제어하기
            - 문제 상황
              - 예매 프로젝트 특성 상 티켓 오픈 날 트래픽이 몰리기 때문에 인기 검색어에 대한 api가 동시에 요청이 될 것으로 판단되어 인기 검색어의 대한 동시성 테스트를 진행을 했습니다. 8000개의 동시성 테스트를 했을 때, 원하는 결과는 8000인데 실제 결과는 831으로 동시성 문제가 발생을 했습니다. 
            - 해결 방법
              - 동시성을 제어하기 위해 Synchronized, Optimistic Lock, Pessimitic Lock을 적용해보았습니다.
                - Synchronized의 경우 동시성은 보장이 되지만 다중 서버 환경인 프로젝트에서는 적합하지 않습니다.
                - Optimistic Lock은 트랜잭션이 충돌이 일어났을 때 롤백을 시키면서 동시성을 제어를 하는데 version이 맞지 않은 경우 롤백을 시키기 때문에 원하는 결과를 얻을 수 없습니다.
                - Pessimitic Lock은 트랜잭션 충돌이 일어나기 전에 Lock을 걸어 동시성을 제어합니다. 그래서 일관성을 유지하기 때문에 적합하다고 판단을 했습니다.
                  - [블로그 - 인기 검색어 동시성 문제 해결하기](https://velog.io/@sang_hyeok_2/Project-%EC%9D%B8%EA%B8%B0-%EA%B2%80%EC%83%89%EC%96%B4-%EB%8F%99%EC%8B%9C%EC%84%B1-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0)
              - Redis의 SETNX와 SpinLock을 사용해서 동시성을 제어 해보았습니다.
                - SETNX의 경우 Lock 키를 통해서 동시성을 제어를 하지만 Lock 키를 얻지 못 했을 때 작업이 종료되면 원하는 결과를 얻을 수 없었습니다.
                  - [블로그 - Redis로 동시성 제어하기 - SETNX](https://velog.io/@sang_hyeok_2/Project-Redis%EB%A1%9C-%EB%8F%99%EC%8B%9C%EC%84%9C-%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0-SETNX)
                - Spin Lock은 루프를 통해서 Lock 키를 얻을 때까지 시도를 하는 방법인데 CPU의 부하가 많이 가고 최대로 시도를 했는데도 Lock 키를 얻지 못하면 작업이 취소 대기 때문에 적합하다고 판단이 되지 않습니다.
                  - [블로그 - Redis로 동시성 제어하기 - Spin Lock](https://velog.io/@sang_hyeok_2/Project-Redis%EB%A1%9C-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0-Spin-Lock)
            - 결과
              - 결과적으로 관리 비용과 일관성, 정확성을 고려했을 때 Pessimitic Lock을 사용하는 것이 적합하다고 판단을 했습니다.
              - Pessimitic Lock을 사용하여 동시성을 제어를 하였고 결과도 8000으로 정확한 결과 나왔습니다.                                                                                                                                                   

  - title: Skill
    layout: list
    content:
      - layout: left
        title: Backend
        # sub_title: Job title
        # caption: Date Range (eg. November 2016 - present)
        # link: Link to company (optional)
        quote: >
          
        description: | # this will include new lines to allow paragraphs
          - Java
          - Spring Boot, Spring MVC, Spring Security, Spring Data JPA
          - JPA, Hibernate
          - Junit4/5, Mockito
          - IntelliJ, VScode
      - layout: left
        title: DB & CI/CD
        # sub_title: Job title
        # caption: Date Range (eg. November 2016 - present)
        # link: Link to company (optional)
        quote: >
          
        description: | # this will include new lines to allow paragraphs
          - MySql, MariaDB, Redis, MongoDB
          - Github Actions, AWS CodeDeploy
          - AWS EC2, AWS S3, AWS RDS 

  - title: Education
    layout: list
    content:
      - layout: left
        title: F-Lab 멘토링 프로그램
        sub_title: https://f-lab.kr/
        caption: 2024.07 ~ 2024.10
        quote: >
          멘토 1명 & 멘티 1명 구성의 자바 멘토링 프로그램
        description: | # this will include new lines to allow paragraphs
          - ticket-flow 프로젝트 개발       
  - title: A Little More About Me
    layout: text
    content: | # this will include new lines to allow paragraphs
      This is where you can write a little more about yourself. You could title this section **Interests** and include some of your other interests.

      Or you could title it **Skills** and write a bit more about things that make you more desirable, like *leadership* or *teamwork*

# Footer
footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
# theme: modern-resume-theme (Use this is you are hosting your resume yourself)
# remote_theme: sproogen/modern-resume-theme (Use this if you are hosting your resume on GitHub)

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag

exclude : [
  "Gemfile",
  "Gemfile.lock",
  "node_modules",
  "vendor/bundle/",
  "vendor/cache/",
  "vendor/gems/",
  "vendor/ruby/",
  "lib/",
  "scripts/",
  "docker-compose.yml",
  ]
